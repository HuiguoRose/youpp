<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ionic.BZip2.Fakes</name>
    </assembly>
    <members>
        <member name="T:Ionic.BZip2.Fakes.ShimBZip2InputStream">
            <summary>Ionic.BZip2.BZip2InputStream 的填充码类型</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2InputStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2InputStream.#ctor(Ionic.BZip2.BZip2InputStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2InputStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2InputStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2InputStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.CanReadGet">
            <summary>设置 BZip2InputStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.CanSeekGet">
            <summary>设置 BZip2InputStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.CanWriteGet">
            <summary>设置 BZip2InputStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.CheckMagicCharCharInt32">
            <summary>设置 BZip2InputStream.CheckMagicChar(Char expected, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.Close">
            <summary>设置 BZip2InputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.ConstructorStream">
            <summary>设置 BZip2InputStream.BZip2InputStream(Stream input) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.ConstructorStreamBoolean">
            <summary>设置 BZip2InputStream.BZip2InputStream(Stream input, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.DisposeBoolean">
            <summary>设置 BZip2InputStream.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.EndBlock">
            <summary>设置 BZip2InputStream.EndBlock() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.Flush">
            <summary>设置 BZip2InputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.GetBitsInt32">
            <summary>设置 BZip2InputStream.GetBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.InitBlock">
            <summary>设置 BZip2InputStream.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.LengthGet">
            <summary>设置 BZip2InputStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.MakeMaps">
            <summary>设置 BZip2InputStream.MakeMaps() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.PositionGet">
            <summary>设置 BZip2InputStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.PositionSetInt64">
            <summary>设置 BZip2InputStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.ReadByte">
            <summary>设置 BZip2InputStream.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.ReadByteArrayInt32Int32">
            <summary>设置 BZip2InputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SeekInt64SeekOrigin">
            <summary>设置 BZip2InputStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetLengthInt64">
            <summary>设置 BZip2InputStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupBlock">
            <summary>设置 BZip2InputStream.SetupBlock() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupNoRandPartA">
            <summary>设置 BZip2InputStream.SetupNoRandPartA() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupNoRandPartB">
            <summary>设置 BZip2InputStream.SetupNoRandPartB() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupNoRandPartC">
            <summary>设置 BZip2InputStream.SetupNoRandPartC() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupRandPartA">
            <summary>设置 BZip2InputStream.SetupRandPartA() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupRandPartB">
            <summary>设置 BZip2InputStream.SetupRandPartB() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.SetupRandPartC">
            <summary>设置 BZip2InputStream.SetupRandPartC() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.WriteByteArrayInt32Int32">
            <summary>设置 BZip2InputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.bsGetBit">
            <summary>设置 BZip2InputStream.bsGetBit() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.bsGetInt">
            <summary>设置 BZip2InputStream.bsGetInt() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.bsGetUByte">
            <summary>设置 BZip2InputStream.bsGetUByte() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.complete">
            <summary>设置 BZip2InputStream.complete() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.createHuffmanDecodingTablesInt32Int32">
            <summary>设置 BZip2InputStream.createHuffmanDecodingTables(Int32 alphaSize, Int32 nGroups) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.getAndMoveToFrontDecode">
            <summary>设置 BZip2InputStream.getAndMoveToFrontDecode() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.getAndMoveToFrontDecode0Int32">
            <summary>设置 BZip2InputStream.getAndMoveToFrontDecode0(Int32 groupNo) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.hbCreateDecodeTablesInt32ArrayInt32ArrayInt32ArrayCharArrayInt32Int32Int32">
            <summary>设置 BZip2InputStream.hbCreateDecodeTables(Int32[] limit, Int32[] bbase, Int32[] perm, Char[] length, Int32 minLen, Int32 maxLen, Int32 alphaSize) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.init">
            <summary>设置 BZip2InputStream.init() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.recvDecodingTables">
            <summary>设置 BZip2InputStream.recvDecodingTables() 的 填充码</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.CanReadGet">
            <summary>设置 BZip2InputStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.CanSeekGet">
            <summary>设置 BZip2InputStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.CanWriteGet">
            <summary>设置 BZip2InputStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.CheckMagicCharCharInt32">
            <summary>设置 BZip2InputStream.CheckMagicChar(Char expected, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.Close">
            <summary>设置 BZip2InputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.DisposeBoolean">
            <summary>设置 BZip2InputStream.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.EndBlock">
            <summary>设置 BZip2InputStream.EndBlock() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.Flush">
            <summary>设置 BZip2InputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.GetBitsInt32">
            <summary>设置 BZip2InputStream.GetBits(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.InitBlock">
            <summary>设置 BZip2InputStream.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.LengthGet">
            <summary>设置 BZip2InputStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.MakeMaps">
            <summary>设置 BZip2InputStream.MakeMaps() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.PositionGet">
            <summary>设置 BZip2InputStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.PositionSetInt64">
            <summary>设置 BZip2InputStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.ReadByte">
            <summary>设置 BZip2InputStream.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 BZip2InputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 BZip2InputStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetLengthInt64">
            <summary>设置 BZip2InputStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupBlock">
            <summary>设置 BZip2InputStream.SetupBlock() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupNoRandPartA">
            <summary>设置 BZip2InputStream.SetupNoRandPartA() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupNoRandPartB">
            <summary>设置 BZip2InputStream.SetupNoRandPartB() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupNoRandPartC">
            <summary>设置 BZip2InputStream.SetupNoRandPartC() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupRandPartA">
            <summary>设置 BZip2InputStream.SetupRandPartA() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupRandPartB">
            <summary>设置 BZip2InputStream.SetupRandPartB() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.SetupRandPartC">
            <summary>设置 BZip2InputStream.SetupRandPartC() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 BZip2InputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.bsGetBit">
            <summary>设置 BZip2InputStream.bsGetBit() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.bsGetInt">
            <summary>设置 BZip2InputStream.bsGetInt() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.bsGetUByte">
            <summary>设置 BZip2InputStream.bsGetUByte() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.complete">
            <summary>设置 BZip2InputStream.complete() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.createHuffmanDecodingTablesInt32Int32">
            <summary>设置 BZip2InputStream.createHuffmanDecodingTables(Int32 alphaSize, Int32 nGroups) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.getAndMoveToFrontDecode">
            <summary>设置 BZip2InputStream.getAndMoveToFrontDecode() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.getAndMoveToFrontDecode0Int32">
            <summary>设置 BZip2InputStream.getAndMoveToFrontDecode0(Int32 groupNo) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.init">
            <summary>设置 BZip2InputStream.init() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2InputStream.AllInstances.recvDecodingTables">
            <summary>设置 BZip2InputStream.recvDecodingTables() 的 填充码</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.ShimBZip2OutputStream">
            <summary>Ionic.BZip2.BZip2OutputStream 的填充码类型</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2OutputStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2OutputStream.#ctor(Ionic.BZip2.BZip2OutputStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2OutputStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2OutputStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimBZip2OutputStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.BlockSizeGet">
            <summary>设置 BZip2OutputStream.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.CanReadGet">
            <summary>设置 BZip2OutputStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.CanSeekGet">
            <summary>设置 BZip2OutputStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.CanWriteGet">
            <summary>设置 BZip2OutputStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.Close">
            <summary>设置 BZip2OutputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.ConstructorStream">
            <summary>设置 BZip2OutputStream.BZip2OutputStream(Stream output) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.ConstructorStreamBoolean">
            <summary>设置 BZip2OutputStream.BZip2OutputStream(Stream output, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.ConstructorStreamInt32">
            <summary>设置 BZip2OutputStream.BZip2OutputStream(Stream output, Int32 blockSize) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.ConstructorStreamInt32Boolean">
            <summary>设置 BZip2OutputStream.BZip2OutputStream(Stream output, Int32 blockSize, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.EmitHeader">
            <summary>设置 BZip2OutputStream.EmitHeader() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.EmitTrailer">
            <summary>设置 BZip2OutputStream.EmitTrailer() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.Finish">
            <summary>设置 BZip2OutputStream.Finish() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.Flush">
            <summary>设置 BZip2OutputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.LengthGet">
            <summary>设置 BZip2OutputStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.PositionGet">
            <summary>设置 BZip2OutputStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.PositionSetInt64">
            <summary>设置 BZip2OutputStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.ReadByteArrayInt32Int32">
            <summary>设置 BZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.SeekInt64SeekOrigin">
            <summary>设置 BZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.SetLengthInt64">
            <summary>设置 BZip2OutputStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.WriteByteArrayInt32Int32">
            <summary>设置 BZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.BlockSizeGet">
            <summary>设置 BZip2OutputStream.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.CanReadGet">
            <summary>设置 BZip2OutputStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.CanSeekGet">
            <summary>设置 BZip2OutputStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.CanWriteGet">
            <summary>设置 BZip2OutputStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.Close">
            <summary>设置 BZip2OutputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.EmitHeader">
            <summary>设置 BZip2OutputStream.EmitHeader() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.EmitTrailer">
            <summary>设置 BZip2OutputStream.EmitTrailer() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.Finish">
            <summary>设置 BZip2OutputStream.Finish() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.Flush">
            <summary>设置 BZip2OutputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.LengthGet">
            <summary>设置 BZip2OutputStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.PositionGet">
            <summary>设置 BZip2OutputStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.PositionSetInt64">
            <summary>设置 BZip2OutputStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 BZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 BZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.SetLengthInt64">
            <summary>设置 BZip2OutputStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimBZip2OutputStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 BZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream">
            <summary>Ionic.BZip2.ParallelBZip2OutputStream 的填充码类型</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.#ctor(Ionic.BZip2.ParallelBZip2OutputStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.BlockSizeGet">
            <summary>设置 ParallelBZip2OutputStream.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.BytesWrittenOutGet">
            <summary>设置 ParallelBZip2OutputStream.get_BytesWrittenOut() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.CanReadGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.CanSeekGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.CanWriteGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.Close">
            <summary>设置 ParallelBZip2OutputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.CompressOneObject">
            <summary>设置 ParallelBZip2OutputStream.CompressOne(Object wi) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.ConstructorStream">
            <summary>设置 ParallelBZip2OutputStream.ParallelBZip2OutputStream(Stream output) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.ConstructorStreamBoolean">
            <summary>设置 ParallelBZip2OutputStream.ParallelBZip2OutputStream(Stream output, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.ConstructorStreamInt32">
            <summary>设置 ParallelBZip2OutputStream.ParallelBZip2OutputStream(Stream output, Int32 blockSize) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.ConstructorStreamInt32Boolean">
            <summary>设置 ParallelBZip2OutputStream.ParallelBZip2OutputStream(Stream output, Int32 blockSize, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.EmitHeader">
            <summary>设置 ParallelBZip2OutputStream.EmitHeader() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.EmitPendingBuffersBooleanBoolean">
            <summary>设置 ParallelBZip2OutputStream.EmitPendingBuffers(Boolean doAll, Boolean mustWait) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.EmitTrailer">
            <summary>设置 ParallelBZip2OutputStream.EmitTrailer() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.Flush">
            <summary>设置 ParallelBZip2OutputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.FlushOutputBoolean">
            <summary>设置 ParallelBZip2OutputStream.FlushOutput(Boolean lastInput) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.InitializePoolOfWorkItems">
            <summary>设置 ParallelBZip2OutputStream.InitializePoolOfWorkItems() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.LengthGet">
            <summary>设置 ParallelBZip2OutputStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.MaxWorkersGet">
            <summary>设置 ParallelBZip2OutputStream.get_MaxWorkers() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.MaxWorkersSetInt32">
            <summary>设置 ParallelBZip2OutputStream.set_MaxWorkers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.PositionGet">
            <summary>设置 ParallelBZip2OutputStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.PositionSetInt64">
            <summary>设置 ParallelBZip2OutputStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.ReadByteArrayInt32Int32">
            <summary>设置 ParallelBZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.SeekInt64SeekOrigin">
            <summary>设置 ParallelBZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.SetLengthInt64">
            <summary>设置 ParallelBZip2OutputStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.StaticConstructor">
            <summary>设置 ParallelBZip2OutputStream.ParallelBZip2OutputStream() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.WriteByteArrayInt32Int32">
            <summary>设置 ParallelBZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.BlockSizeGet">
            <summary>设置 ParallelBZip2OutputStream.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.BytesWrittenOutGet">
            <summary>设置 ParallelBZip2OutputStream.get_BytesWrittenOut() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.CanReadGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.CanSeekGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.CanWriteGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.Close">
            <summary>设置 ParallelBZip2OutputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.CompressOneObject">
            <summary>设置 ParallelBZip2OutputStream.CompressOne(Object wi) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.EmitHeader">
            <summary>设置 ParallelBZip2OutputStream.EmitHeader() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.EmitPendingBuffersBooleanBoolean">
            <summary>设置 ParallelBZip2OutputStream.EmitPendingBuffers(Boolean doAll, Boolean mustWait) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.EmitTrailer">
            <summary>设置 ParallelBZip2OutputStream.EmitTrailer() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.Flush">
            <summary>设置 ParallelBZip2OutputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.FlushOutputBoolean">
            <summary>设置 ParallelBZip2OutputStream.FlushOutput(Boolean lastInput) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.InitializePoolOfWorkItems">
            <summary>设置 ParallelBZip2OutputStream.InitializePoolOfWorkItems() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.LengthGet">
            <summary>设置 ParallelBZip2OutputStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.MaxWorkersGet">
            <summary>设置 ParallelBZip2OutputStream.get_MaxWorkers() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.MaxWorkersSetInt32">
            <summary>设置 ParallelBZip2OutputStream.set_MaxWorkers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.PositionGet">
            <summary>设置 ParallelBZip2OutputStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.PositionSetInt64">
            <summary>设置 ParallelBZip2OutputStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 ParallelBZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 ParallelBZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.SetLengthInt64">
            <summary>设置 ParallelBZip2OutputStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.ShimParallelBZip2OutputStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 ParallelBZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.StubBZip2InputStream">
            <summary>Ionic.BZip2.BZip2InputStream 的存根类型</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubBZip2InputStream.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubBZip2InputStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubBZip2InputStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.CanReadGet">
            <summary>设置 BZip2InputStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.CanSeekGet">
            <summary>设置 BZip2InputStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.CanWriteGet">
            <summary>设置 BZip2InputStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.Close">
            <summary>设置 BZip2InputStream.Close() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.Close01">
            <summary>设置 BZip2InputStream.Close() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.Dispose(System.Boolean)">
            <summary>设置 BZip2InputStream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.DisposeBoolean">
            <summary>设置 BZip2InputStream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.Flush">
            <summary>设置 BZip2InputStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.Flush01">
            <summary>设置 BZip2InputStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.InitializeStub">
            <summary>初始化 type StubBZip2InputStream 的新实例</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.LengthGet">
            <summary>设置 BZip2InputStream.get_Length() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.PositionGet">
            <summary>设置 BZip2InputStream.get_Position() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.PositionSetInt64">
            <summary>设置 BZip2InputStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BZip2InputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.ReadByte">
            <summary>设置 BZip2InputStream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.ReadByte01">
            <summary>设置 BZip2InputStream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.ReadByteArrayInt32Int32">
            <summary>设置 BZip2InputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.ReadTimeoutGet">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.ReadTimeoutSetInt32">
            <summary>设置 Stream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 BZip2InputStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.SeekInt64SeekOrigin">
            <summary>设置 BZip2InputStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.SetLength(System.Int64)">
            <summary>设置 BZip2InputStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.SetLengthInt64">
            <summary>设置 BZip2InputStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BZip2InputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2InputStream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.WriteByteArrayInt32Int32">
            <summary>设置 BZip2InputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.WriteTimeoutGet">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2InputStream.WriteTimeoutSetInt32">
            <summary>设置 Stream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.CanRead">
            <summary>设置 BZip2InputStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.CanSeek">
            <summary>设置 BZip2InputStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.CanWrite">
            <summary>设置 BZip2InputStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.Length">
            <summary>设置 BZip2InputStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.Position">
            <summary>设置 BZip2InputStream.get_Position() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.ReadTimeout">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2InputStream.WriteTimeout">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.StubBZip2OutputStream">
            <summary>Ionic.BZip2.BZip2OutputStream 的存根类型</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.#ctor(System.IO.Stream,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubBZip2OutputStream.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubBZip2OutputStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubBZip2OutputStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanReadGet">
            <summary>设置 BZip2OutputStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanSeekGet">
            <summary>设置 BZip2OutputStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanWriteGet">
            <summary>设置 BZip2OutputStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.Close">
            <summary>设置 BZip2OutputStream.Close() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.Close01">
            <summary>设置 BZip2OutputStream.Close() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.Dispose(System.Boolean)">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.DisposeBoolean">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.Flush">
            <summary>设置 BZip2OutputStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.Flush01">
            <summary>设置 BZip2OutputStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.InitializeStub">
            <summary>初始化 type StubBZip2OutputStream 的新实例</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.LengthGet">
            <summary>设置 BZip2OutputStream.get_Length() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.PositionGet">
            <summary>设置 BZip2OutputStream.get_Position() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.PositionSetInt64">
            <summary>设置 BZip2OutputStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.ReadByteArrayInt32Int32">
            <summary>设置 BZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.ReadTimeoutGet">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.ReadTimeoutSetInt32">
            <summary>设置 Stream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 BZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.SeekInt64SeekOrigin">
            <summary>设置 BZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.SetLength(System.Int64)">
            <summary>设置 BZip2OutputStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.SetLengthInt64">
            <summary>设置 BZip2OutputStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubBZip2OutputStream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.WriteByteArrayInt32Int32">
            <summary>设置 BZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.WriteTimeoutGet">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubBZip2OutputStream.WriteTimeoutSetInt32">
            <summary>设置 Stream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanRead">
            <summary>设置 BZip2OutputStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanSeek">
            <summary>设置 BZip2OutputStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.CanWrite">
            <summary>设置 BZip2OutputStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.Length">
            <summary>设置 BZip2OutputStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.Position">
            <summary>设置 BZip2OutputStream.get_Position() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.ReadTimeout">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubBZip2OutputStream.WriteTimeout">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream">
            <summary>Ionic.BZip2.ParallelBZip2OutputStream 的存根类型</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.#ctor(System.IO.Stream,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubParallelBZip2OutputStream.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubParallelBZip2OutputStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubParallelBZip2OutputStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanReadGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanSeekGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanWriteGet">
            <summary>设置 ParallelBZip2OutputStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Close">
            <summary>设置 ParallelBZip2OutputStream.Close() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Close01">
            <summary>设置 ParallelBZip2OutputStream.Close() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Dispose(System.Boolean)">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.DisposeBoolean">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Flush">
            <summary>设置 ParallelBZip2OutputStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Flush01">
            <summary>设置 ParallelBZip2OutputStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.InitializeStub">
            <summary>初始化 type StubParallelBZip2OutputStream 的新实例</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.LengthGet">
            <summary>设置 ParallelBZip2OutputStream.get_Length() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.PositionGet">
            <summary>设置 ParallelBZip2OutputStream.get_Position() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.PositionSetInt64">
            <summary>设置 ParallelBZip2OutputStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 ParallelBZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.ReadByteArrayInt32Int32">
            <summary>设置 ParallelBZip2OutputStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.ReadTimeoutGet">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.ReadTimeoutSetInt32">
            <summary>设置 Stream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 ParallelBZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.SeekInt64SeekOrigin">
            <summary>设置 ParallelBZip2OutputStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.SetLength(System.Int64)">
            <summary>设置 ParallelBZip2OutputStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.SetLengthInt64">
            <summary>设置 ParallelBZip2OutputStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 ParallelBZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.WriteByteArrayInt32Int32">
            <summary>设置 ParallelBZip2OutputStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.WriteTimeoutGet">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.WriteTimeoutSetInt32">
            <summary>设置 Stream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanRead">
            <summary>设置 ParallelBZip2OutputStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanSeek">
            <summary>设置 ParallelBZip2OutputStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.CanWrite">
            <summary>设置 ParallelBZip2OutputStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Length">
            <summary>设置 ParallelBZip2OutputStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.Position">
            <summary>设置 ParallelBZip2OutputStream.get_Position() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.ReadTimeout">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.BZip2.Fakes.StubParallelBZip2OutputStream.WriteTimeout">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Ionic.Crc.Fakes.ShimCRC32">
            <summary>Ionic.Crc.CRC32 的填充码类型</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCRC32.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCRC32.#ctor(Ionic.Crc.CRC32)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCRC32.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCRC32.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.CombineInt32Int32">
            <summary>设置 CRC32.Combine(Int32 crc, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.ComputeCrc32Int32Byte">
            <summary>设置 CRC32.ComputeCrc32(Int32 W, Byte B) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.Constructor">
            <summary>设置 CRC32.CRC32() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.ConstructorBoolean">
            <summary>设置 CRC32.CRC32(Boolean reverseBits) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.ConstructorInt32Boolean">
            <summary>设置 CRC32.CRC32(Int32 polynomial, Boolean reverseBits) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.Crc32ResultGet">
            <summary>设置 CRC32.get_Crc32Result() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.GenerateLookupTable">
            <summary>设置 CRC32.GenerateLookupTable() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.GetCrc32AndCopyStreamStream">
            <summary>设置 CRC32.GetCrc32AndCopy(Stream input, Stream output) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.GetCrc32Stream">
            <summary>设置 CRC32.GetCrc32(Stream input) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.Reset">
            <summary>设置 CRC32.Reset() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.ReverseBitsByte">
            <summary>设置 CRC32.ReverseBits(Byte data) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.ReverseBitsUInt32">
            <summary>设置 CRC32.ReverseBits(UInt32 data) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.SlurpBlockByteArrayInt32Int32">
            <summary>设置 CRC32.SlurpBlock(Byte[] block, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.TotalBytesReadGet">
            <summary>设置 CRC32.get_TotalBytesRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.UpdateCRCByte">
            <summary>设置 CRC32.UpdateCRC(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.UpdateCRCByteInt32">
            <summary>设置 CRC32.UpdateCRC(Byte b, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32._InternalComputeCrc32UInt32Byte">
            <summary>设置 CRC32._InternalComputeCrc32(UInt32 W, Byte B) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.gf2_matrix_squareUInt32ArrayUInt32Array">
            <summary>设置 CRC32.gf2_matrix_square(UInt32[] square, UInt32[] mat) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.gf2_matrix_timesUInt32ArrayUInt32">
            <summary>设置 CRC32.gf2_matrix_times(UInt32[] matrix, UInt32 vec) 的 填充码</summary>
        </member>
        <member name="T:Ionic.Crc.Fakes.ShimCRC32.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.CombineInt32Int32">
            <summary>设置 CRC32.Combine(Int32 crc, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.ComputeCrc32Int32Byte">
            <summary>设置 CRC32.ComputeCrc32(Int32 W, Byte B) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.Crc32ResultGet">
            <summary>设置 CRC32.get_Crc32Result() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.GenerateLookupTable">
            <summary>设置 CRC32.GenerateLookupTable() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.GetCrc32AndCopyStreamStream">
            <summary>设置 CRC32.GetCrc32AndCopy(Stream input, Stream output) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.GetCrc32Stream">
            <summary>设置 CRC32.GetCrc32(Stream input) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.Reset">
            <summary>设置 CRC32.Reset() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.SlurpBlockByteArrayInt32Int32">
            <summary>设置 CRC32.SlurpBlock(Byte[] block, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.TotalBytesReadGet">
            <summary>设置 CRC32.get_TotalBytesRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.UpdateCRCByte">
            <summary>设置 CRC32.UpdateCRC(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.UpdateCRCByteInt32">
            <summary>设置 CRC32.UpdateCRC(Byte b, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances._InternalComputeCrc32UInt32Byte">
            <summary>设置 CRC32._InternalComputeCrc32(UInt32 W, Byte B) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.gf2_matrix_squareUInt32ArrayUInt32Array">
            <summary>设置 CRC32.gf2_matrix_square(UInt32[] square, UInt32[] mat) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCRC32.AllInstances.gf2_matrix_timesUInt32ArrayUInt32">
            <summary>设置 CRC32.gf2_matrix_times(UInt32[] matrix, UInt32 vec) 的 填充码</summary>
        </member>
        <member name="T:Ionic.Crc.Fakes.ShimCrcCalculatorStream">
            <summary>Ionic.Crc.CrcCalculatorStream 的填充码类型</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCrcCalculatorStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCrcCalculatorStream.#ctor(Ionic.Crc.CrcCalculatorStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCrcCalculatorStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCrcCalculatorStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.ShimCrcCalculatorStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.CanReadGet">
            <summary>设置 CrcCalculatorStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.CanSeekGet">
            <summary>设置 CrcCalculatorStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.CanWriteGet">
            <summary>设置 CrcCalculatorStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.Close">
            <summary>设置 CrcCalculatorStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ConstructorBooleanInt64StreamCRC32">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream(Boolean leaveOpen, Int64 length, Stream stream, CRC32 crc32) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ConstructorStream">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ConstructorStreamBoolean">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream(Stream stream, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ConstructorStreamInt64">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream(Stream stream, Int64 length) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ConstructorStreamInt64Boolean">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream(Stream stream, Int64 length, Boolean leaveOpen) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ConstructorStreamInt64BooleanCRC32">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream(Stream stream, Int64 length, Boolean leaveOpen, CRC32 crc32) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.CrcGet">
            <summary>设置 CrcCalculatorStream.get_Crc() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.Flush">
            <summary>设置 CrcCalculatorStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.LeaveOpenGet">
            <summary>设置 CrcCalculatorStream.get_LeaveOpen() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.LeaveOpenSetBoolean">
            <summary>设置 CrcCalculatorStream.set_LeaveOpen(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.LengthGet">
            <summary>设置 CrcCalculatorStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.PositionGet">
            <summary>设置 CrcCalculatorStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.PositionSetInt64">
            <summary>设置 CrcCalculatorStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.ReadByteArrayInt32Int32">
            <summary>设置 CrcCalculatorStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.SeekInt64SeekOrigin">
            <summary>设置 CrcCalculatorStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.SetLengthInt64">
            <summary>设置 CrcCalculatorStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.StaticConstructor">
            <summary>设置 CrcCalculatorStream.CrcCalculatorStream() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.SystemIDisposableDispose">
            <summary>设置 CrcCalculatorStream.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.TotalBytesSlurpedGet">
            <summary>设置 CrcCalculatorStream.get_TotalBytesSlurped() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.WriteByteArrayInt32Int32">
            <summary>设置 CrcCalculatorStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.CanReadGet">
            <summary>设置 CrcCalculatorStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.CanSeekGet">
            <summary>设置 CrcCalculatorStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.CanWriteGet">
            <summary>设置 CrcCalculatorStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.Close">
            <summary>设置 CrcCalculatorStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.CrcGet">
            <summary>设置 CrcCalculatorStream.get_Crc() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.Flush">
            <summary>设置 CrcCalculatorStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.LeaveOpenGet">
            <summary>设置 CrcCalculatorStream.get_LeaveOpen() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.LeaveOpenSetBoolean">
            <summary>设置 CrcCalculatorStream.set_LeaveOpen(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.LengthGet">
            <summary>设置 CrcCalculatorStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.PositionGet">
            <summary>设置 CrcCalculatorStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.PositionSetInt64">
            <summary>设置 CrcCalculatorStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 CrcCalculatorStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 CrcCalculatorStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.SetLengthInt64">
            <summary>设置 CrcCalculatorStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.SystemIDisposableDispose">
            <summary>设置 CrcCalculatorStream.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.TotalBytesSlurpedGet">
            <summary>设置 CrcCalculatorStream.get_TotalBytesSlurped() 的 填充码</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.ShimCrcCalculatorStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 CrcCalculatorStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Ionic.Crc.Fakes.StubCRC32">
            <summary>Ionic.Crc.CRC32 的存根类型</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCRC32.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCRC32.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCRC32.#ctor(System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCRC32.InitializeStub">
            <summary>初始化 type StubCRC32 的新实例</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCRC32.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCRC32.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCRC32.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Ionic.Crc.Fakes.StubCrcCalculatorStream">
            <summary>Ionic.Crc.CrcCalculatorStream 的存根类型</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.#ctor(System.IO.Stream,System.Int64,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.#ctor(System.IO.Stream,System.Int64,System.Boolean,Ionic.Crc.CRC32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubCrcCalculatorStream.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubCrcCalculatorStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubCrcCalculatorStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanReadGet">
            <summary>设置 CrcCalculatorStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanSeekGet">
            <summary>设置 CrcCalculatorStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanWriteGet">
            <summary>设置 CrcCalculatorStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.Close">
            <summary>设置 CrcCalculatorStream.Close() 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.Close01">
            <summary>设置 CrcCalculatorStream.Close() 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.Dispose(System.Boolean)">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.DisposeBoolean">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.Flush">
            <summary>设置 CrcCalculatorStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.Flush01">
            <summary>设置 CrcCalculatorStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.InitializeStub">
            <summary>初始化 type StubCrcCalculatorStream 的新实例</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.LengthGet">
            <summary>设置 CrcCalculatorStream.get_Length() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.PositionGet">
            <summary>设置 CrcCalculatorStream.get_Position() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.PositionSetInt64">
            <summary>设置 CrcCalculatorStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 CrcCalculatorStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.ReadByteArrayInt32Int32">
            <summary>设置 CrcCalculatorStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.ReadTimeoutGet">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.ReadTimeoutSetInt32">
            <summary>设置 Stream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 CrcCalculatorStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.SeekInt64SeekOrigin">
            <summary>设置 CrcCalculatorStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.SetLength(System.Int64)">
            <summary>设置 CrcCalculatorStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.SetLengthInt64">
            <summary>设置 CrcCalculatorStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 CrcCalculatorStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Ionic.Crc.Fakes.StubCrcCalculatorStream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.WriteByteArrayInt32Int32">
            <summary>设置 CrcCalculatorStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.WriteTimeoutGet">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Ionic.Crc.Fakes.StubCrcCalculatorStream.WriteTimeoutSetInt32">
            <summary>设置 Stream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanRead">
            <summary>设置 CrcCalculatorStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanSeek">
            <summary>设置 CrcCalculatorStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.CanWrite">
            <summary>设置 CrcCalculatorStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.Length">
            <summary>设置 CrcCalculatorStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.Position">
            <summary>设置 CrcCalculatorStream.get_Position() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.ReadTimeout">
            <summary>设置 Stream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Ionic.Crc.Fakes.StubCrcCalculatorStream.WriteTimeout">
            <summary>设置 Stream.get_WriteTimeout() 的 stub</summary>
        </member>
    </members>
</doc>
